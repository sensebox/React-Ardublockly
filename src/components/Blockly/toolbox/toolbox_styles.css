/* Embedded mode workspace container adjustments */
.embedded-mode .blocklyMainBackground {
  width: 100% !important;
  height: 100% !important;
}

.embedded-mode .blocklyWorkspace {
  width: 100% !important;
  height: 100% !important;
}

/* Embedded mode search field - only adjust width and vertical alignment */
.embedded-mode input[type="search"] {
  width: calc(100vw - 40px) !important;
  vertical-align: middle !important;
  -webkit-user-select: text !important;
  user-select: text !important;
}

/* Ensure search category container centers the search input vertically */
.embedded-mode .blocklyToolboxCategory:has(input[type="search"]) {
    height: auto !important;
    margin-left: 4px !important;
}

/* Consolidated embedded toolbox base + variables */
.embedded-mode .blocklyToolbox {
  --cat-height: 36px;
  --cat-padding-x: 8px;
}

.embedded-mode .blocklyToolbox .blocklyToolboxCategory {
  height: var(--cat-height) !important;
  min-height: var(--cat-height) !important;
  line-height: var(--cat-height) !important;
  display: flex;
  align-items: center;
  border-radius: 5px;
  background: #fff;
  margin: 2px;
  padding: 0 2px;
  align-content: center;
  outline: none; /* remove default focus ring */
  position: relative;
}

/* Embedded mode - disable focus styling */
.embedded-mode .blocklyToolboxCategory:focus,
.embedded-mode .blocklyToolboxCategoryContainer:focus,
.embedded-mode .blocklyTreeRow:focus,
.embedded-mode .blocklyTreeLabel:focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Embedded mode - category indentation and positioning */
/* Remove indentation for subcategories in embedded view */
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="2"] {
  margin-left: 0 !important;
}

/* In embedded mode horizontal layout, third level categories should appear next to second level, not indented */
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="3"] {
  margin-left: 0px !important;
  position: relative !important;
  top: 0 !important;
  left: 0 !important;
  transform: none !important;
}

.embedded-mode .blocklyToolboxCategoryContainer[aria-level="4"] {
  margin-left: 0px !important;
  position: relative !important;
  top: 0 !important;
  left: 0 !important;
  transform: none !important;
}

/* Remove inline padding-left added by Blockly for nested levels */
.embedded-mode .blocklyToolbox .blocklyToolboxCategory {
  padding-left: 0 !important;
}

/* Normal toolbox layout - default behavior */
.blocklyToolbox {
  width: auto !important;
  min-width: 200px;
  max-width: 300px;
}

/* Embedded mode specific styles - only apply when .embedded-mode class is present */
.embedded-mode .blocklyToolbox {
  width: 100% !important;
  height: auto !important;
  min-width: 100% !important;
  max-width: none !important;
  min-height: 60px !important;
  max-height: none !important;
  /* Don't override position - let Blockly handle toolboxPosition: 'end' */
}

.embedded-mode .blocklyToolbox .blocklyToolboxContents {
  display: flex !important;
  flex-wrap: wrap !important;
  align-items: flex-start !important;
}

/* Force horizontal layout for all nested categories in embedded mode */
.embedded-mode .blocklyToolboxCategoryContainer {
  display: inline-block !important;
  vertical-align: top !important;
}

/* Ensure proper spacing between categories at all levels in embedded mode */
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="3"],
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="4"] {
  margin-right: 10px !important;
  margin-bottom: 5px !important;
}

/* Ensure nested categories flow horizontally in embedded mode */
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="2"] .blocklyToolboxCategoryContainer[aria-level="3"],
.embedded-mode .blocklyToolboxCategoryContainer[aria-level="3"] .blocklyToolboxCategoryContainer[aria-level="4"] {
  display: inline-block !important;
  margin-left: 0px !important;
  margin-right: 10px !important;
  position: relative !important;
  top: 0 !important;
  left: 0 !important;
}

/* Removed iPad per-level heights in favor of single --cat-height */

/* iPad touch optimizations */
.embedded-mode .blocklyToolboxCategory {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

/* iPad flyout spacing */
.embedded-mode .blocklyFlyout .blocklyBlockCanvas > .blocklyDraggable {
  margin: 8px 0 !important;
}

/* iPad scroll bars */
.embedded-mode .blocklyScrollbarHandle {
  width: 12px !important;
  height: 12px !important;
}

/* Embedded toolbox: ensure expandable category icons are visible and styled */
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconClosed,
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconOpen {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 12px;
  height: 12px;
  visibility: visible !important;
  display: inline-block;
  color: var(--cat-accent, currentColor);
}

.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconClosed::before,
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconOpen::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 6px;
  height: 6px;
  border-right: 2px solid currentColor;
  border-bottom: 2px solid currentColor;
  transform-origin: center;
  transition: transform 120ms ease;
}

/* Closed: chevron points right */
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconClosed::before {
  transform: translate(-50%, -50%) rotate(-45deg);
}

/* Open: chevron points down */
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryIconOpen::before {
  transform: translate(-50%, -50%) rotate(45deg);
}

/* Also rotate when the container is expanded (defensive if icon class doesn't switch) */
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryContainer[aria-expanded="true"] .blocklyToolboxCategoryIconClosed::before {
  transform: translate(-50%, -50%) rotate(45deg);
}

/* Embedded toolbox row layout: label first, icon last */
.embedded-mode .blocklyToolbox .blocklyTreeRowContentContainer {
  display: flex;
  align-items: center;
  min-height: var(--cat-height) !important;
  padding-right: 24px; /* reserve space for absolute chevron */
}

.embedded-mode .blocklyToolbox .blocklyToolboxCategoryLabel,
.embedded-mode .blocklyToolbox .blocklyTreeLabel,
.embedded-mode .blocklyToolbox .blocklyToolboxItemLabel {
  flex: 1 1 auto;
  margin-right: 0;
  padding-left: 8px !important; /* add subtle text padding */
  padding-right: 8px;
  line-height: var(--cat-height) !important;
}

/* Embedded: visually distinguish subcategory levels with soft background hues */
.embedded-mode .blocklyToolbox .blocklyToolboxCategoryContainer[aria-level="2"] .blocklyToolboxCategory:not(:has(input[type="search"])) {
  background: #E8F5E8; /* light green */
}

.embedded-mode .blocklyToolbox .blocklyToolboxCategoryContainer[aria-level="3"] .blocklyToolboxCategory:not(:has(input[type="search"])) {
  background: #FFF3E0; /* light orange */
}

.embedded-mode .blocklyToolbox .blocklyToolboxCategoryContainer[aria-level="4"] .blocklyToolboxCategory:not(:has(input[type="search"])) {
  background: #F3E5F5; /* light purple */
}

